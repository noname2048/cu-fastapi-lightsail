name: Integration Test (Pytest)

on:
  pull_request:
    branches: [ main ]
  
env:
  AWS_LIGHTSAIL_SERVICE_NAME: cu-container-service-1
  IMAGE_NAME: backend
  IMAGE_TAG: latest
  IMAGE: backend:latest
  BACKEND_ENV: ci
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  DB_URL: "postgresql://postgres:postgres@localhost:5432/postgres"
  VERSION: ${{ github.base_ref }} 

jobs:
  CI:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: Check for changes in backend/**/*.py 
        id: check_changes
        run: |
          git fetch origin ${{ github.base_ref }}
          changed_files=$(git diff --name-only FETCH_HEAD..HEAD)
          echo "changed files: $changed_files"
          if echo "$(changed_files)" | grep -qE "backend/.*\.py$"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        if: steps.check_changes.outputs.changed == 'true'
        uses: actions/setup-python@v4
        with: 
          python-version: '3.11'

      - name: Install poetry
        if: steps.check_changes.outputs.changed == 'true'
        uses: abatilo/actions-poetry@v2

      - name: Setup a local virtual environment (if no poetry.toml file)
        if: steps.check_changes.outputs.changed == 'true'
        working-directory: ./backend
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        if: steps.check_changes.outputs.changed == 'true'
        name: cache virtualenv
        with:
          path: backend/.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        if: steps.check_changes.outputs.changed == 'true'
        working-directory: ./backend
        run: |
          poetry install

      - name: run pytest
        if: steps.check_changes.outputs.changed == 'true'
        working-directory: ./backend
        run: |
          poetry run pytest

      - name: No changes in backend/**/*.py
        if: steps.check_changes.outputs.changed == 'false'
        run: echo "No changes in backend/**/*.py. CI is successful."
